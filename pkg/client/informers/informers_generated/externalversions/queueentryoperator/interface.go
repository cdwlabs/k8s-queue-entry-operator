/*
Copyright 2018 The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// This file was automatically generated by informer-gen

package queueentryoperator

import (
	internalinterfaces "github.com/podnov/k8s-queue-entry-operator/pkg/client/informers/informers_generated/externalversions/internalinterfaces"
	betav1 "github.com/podnov/k8s-queue-entry-operator/pkg/client/informers/informers_generated/externalversions/queueentryoperator/betav1"
)

// Interface provides access to each of this group's versions.
type Interface interface {
	// Betav1 provides access to shared informers for resources in Betav1.
	Betav1() betav1.Interface
}

type group struct {
	internalinterfaces.SharedInformerFactory
}

// New returns a new Interface.
func New(f internalinterfaces.SharedInformerFactory) Interface {
	return &group{f}
}

// Betav1 returns a new betav1.Interface.
func (g *group) Betav1() betav1.Interface {
	return betav1.New(g.SharedInformerFactory)
}
